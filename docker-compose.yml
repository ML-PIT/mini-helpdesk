version: '3.8'

services:
  # Main application
  web:
    build:
      context: .
      target: production
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=mysql+pymysql://helpdesk:${MYSQL_PASSWORD}@mysql:3306/helpdesk_db
      - REDIS_URL=redis://redis:6379/0
      - RATELIMIT_STORAGE_URL=redis://redis:6379/1
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
      - ./backups:/app/backups
    depends_on:
      - mysql
      - redis
    networks:
      - helpdesk-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # MySQL Database
  mysql:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=helpdesk_db
      - MYSQL_USER=helpdesk
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - helpdesk-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Redis for caching and queues
  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    networks:
      - helpdesk-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery worker for background tasks
  celery:
    build:
      context: .
      target: production
    command: celery -A app.celery worker --loglevel=info
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=mysql+pymysql://helpdesk:${MYSQL_PASSWORD}@mysql:3306/helpdesk_db
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      - mysql
      - redis
    networks:
      - helpdesk-network
    restart: unless-stopped

  # Celery Beat for scheduled tasks
  celery-beat:
    build:
      context: .
      target: production
    command: celery -A app.celery beat --loglevel=info
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=mysql+pymysql://helpdesk:${MYSQL_PASSWORD}@mysql:3306/helpdesk_db
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./logs:/app/logs
    depends_on:
      - mysql
      - redis
    networks:
      - helpdesk-network
    restart: unless-stopped

  # MongoDB (optional, for advanced features)
  mongodb:
    image: mongo:6
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=helpdesk_db
    volumes:
      - mongodb_data:/data/db
    networks:
      - helpdesk-network
    restart: unless-stopped
    profiles:
      - mongodb

  # Nginx reverse proxy (for production)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./static:/var/www/static:ro
    depends_on:
      - web
    networks:
      - helpdesk-network
    restart: unless-stopped
    profiles:
      - nginx

volumes:
  mysql_data:
  redis_data:
  mongodb_data:

networks:
  helpdesk-network:
    driver: bridge
# Generated by Django 5.0.6 on 2025-10-31 07:32

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SystemSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('smtp_host', models.CharField(default='smtp.office365.com', help_text='e.g., smtp.office365.com, smtp.gmail.com', max_length=255, verbose_name='SMTP Host')),
                ('smtp_port', models.IntegerField(default=587, verbose_name='SMTP Port')),
                ('smtp_username', models.CharField(blank=True, max_length=255, verbose_name='SMTP Username')),
                ('smtp_password', models.CharField(blank=True, max_length=255, verbose_name='SMTP Password')),
                ('smtp_use_tls', models.BooleanField(default=True, verbose_name='Use TLS')),
                ('smtp_use_ssl', models.BooleanField(default=False, verbose_name='Use SSL')),
                ('imap_enabled', models.BooleanField(default=False, help_text='Enable reading emails from mailbox', verbose_name='Enable IMAP')),
                ('imap_host', models.CharField(blank=True, default='outlook.office365.com', max_length=255, verbose_name='IMAP Host')),
                ('imap_port', models.IntegerField(blank=True, default=993, verbose_name='IMAP Port')),
                ('imap_username', models.CharField(blank=True, max_length=255, verbose_name='IMAP Username')),
                ('imap_password', models.CharField(blank=True, max_length=255, verbose_name='IMAP Password')),
                ('imap_use_ssl', models.BooleanField(default=True, verbose_name='Use SSL')),
                ('imap_folder', models.CharField(default='INBOX', help_text='Mailbox folder to monitor', max_length=255, verbose_name='IMAP Folder')),
                ('logo', models.ImageField(blank=True, help_text='Company logo (max 2MB, recommended: 200x50px)', null=True, upload_to='logos/', verbose_name='Logo')),
                ('app_name', models.CharField(default='Helpdesk', help_text='Name shown in navbar and browser tab', max_length=255, verbose_name='Application Name')),
                ('company_name', models.CharField(default='Company', help_text='Company name for branding', max_length=255, verbose_name='Company Name')),
                ('site_url', models.URLField(default='http://localhost:8000', help_text='Base URL for email links and redirects', verbose_name='Site URL')),
                ('text_editor', models.CharField(choices=[('tinymce', 'TinyMCE'), ('ckeditor', 'CKEditor')], default='tinymce', help_text='Choose which rich text editor to use throughout the application', max_length=20, verbose_name='Text Editor')),
                ('stats_permissions', models.JSONField(default=dict, help_text='Which user roles can access which statistics', verbose_name='Statistics Permissions')),
                ('max_upload_size_mb', models.IntegerField(default=16, help_text='Maximum file size allowed for uploads', verbose_name='Max Upload Size (MB)')),
                ('allowed_file_types', models.JSONField(default=list, help_text='List of allowed file extensions (e.g., ["pdf", "jpg", "png"])', verbose_name='Allowed File Types')),
                ('send_email_notifications', models.BooleanField(default=True, verbose_name='Send Email Notifications')),
                ('email_signature', models.TextField(blank=True, help_text='Signature added to all outgoing emails', verbose_name='Email Signature')),
                ('timezone', models.CharField(default='Europe/Berlin', max_length=100, verbose_name='Timezone')),
                ('language', models.CharField(choices=[('de', 'Deutsch'), ('en', 'English')], default='de', max_length=10, verbose_name='Language')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_settings', to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
            ],
            options={
                'verbose_name': 'System Settings',
                'verbose_name_plural': 'System Settings',
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('created', 'Created'), ('updated', 'Updated'), ('deleted', 'Deleted'), ('email_sent', 'Email Sent'), ('file_uploaded', 'File Uploaded')], max_length=20, verbose_name='Action')),
                ('content_type', models.CharField(max_length=255, verbose_name='Content Type')),
                ('object_id', models.IntegerField(blank=True, null=True, verbose_name='Object ID')),
                ('description', models.TextField(verbose_name='Description')),
                ('old_values', models.JSONField(blank=True, default=dict, verbose_name='Old Values')),
                ('new_values', models.JSONField(blank=True, default=dict, verbose_name='New Values')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP Address')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='Created At')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Audit Log',
                'verbose_name_plural': 'Audit Logs',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', '-created_at'], name='admin_panel_user_id_753693_idx'), models.Index(fields=['action', '-created_at'], name='admin_panel_action_a0d9ca_idx')],
            },
        ),
    ]
